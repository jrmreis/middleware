{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Node",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workspaceLAW": {
      "type": "string",
      "defaultValue": "afoinc-nft-law",
      "metadata": {
        "description": "The friendly name for the workspace that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "connectedCluster": {
      "type": "string",
      "defaultValue": "nft-target-cluster",
      "metadata": {
        "description": "The friendly name for the connected cluster.  This name must be unique within a resource group."
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().id, '/providers/microsoft.operationalinsights/workspaces/', parameters('workspaceLAW'))]",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    },
    "workbookConnectedCluster": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().id, '/providers/Microsoft.Kubernetes/connectedClusters/', parameters('connectedCluster'))]",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure region with which the workbook will be associated"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "crossComponentResources": ["{Resource}"],
            "parameters": [
              {
                "id": "ae41fa0f-4d3c-4e2b-b1b4-0a178a567c03",
                "version": "KqlParameterItem/1.0",
                "name": "Timeframe",
                "type": 4,
                "isRequired": true,
                "value": {
                  "durationMs": 1800000
                },
                "typeSettings": {
                  "selectableValues": [
                    {
                      "durationMs": 300000
                    },
                    {
                      "durationMs": 900000
                    },
                    {
                      "durationMs": 1800000
                    },
                    {
                      "durationMs": 3600000
                    },
                    {
                      "durationMs": 14400000
                    },
                    {
                      "durationMs": 43200000
                    },
                    {
                      "durationMs": 86400000
                    },
                    {
                      "durationMs": 172800000
                    },
                    {
                      "durationMs": 259200000
                    },
                    {
                      "durationMs": 604800000
                    },
                    {
                      "durationMs": 1209600000
                    },
                    {
                      "durationMs": 2419200000
                    },
                    {
                      "durationMs": 2592000000
                    },
                    {
                      "durationMs": 5184000000
                    },
                    {
                      "durationMs": 7776000000
                    }
                  ],
                  "allowCustom": true
                }
              },
              {
                "id": "77adbf54-fe23-4d78-8721-0611d01b0d33",
                "version": "KqlParameterItem/1.0",
                "name": "Resource",
                "label": "Workspace",
                "type": 5,
                "isRequired": true,
                "query": "InsightsMetrics \r\n| where Namespace == \"prometheus\" and Name contains \"node_\"\r\n| distinct _ResourceId",
                "value": "value::1",
                "typeSettings": {
                  "resourceTypeFilter": {
                    "microsoft.kubernetes/connectedclusters": true
                  },
                  "additionalResourceOptions": ["value::1"],
                  "showDefault": false
                },
                "timeContext": {
                  "durationMs": 0
                },
                "timeContextFromParameter": "Timeframe",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              {
                "id": "c9edb00c-dc31-4324-aaaf-c00a717f7dac",
                "version": "KqlParameterItem/1.0",
                "name": "Computer",
                "label": "Hostname",
                "type": 2,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "query": "InsightsMetrics\r\n| summarize by Computer\r\n| sort by Computer asc",
                "crossComponentResources": ["{Resource}"],
                "typeSettings": {
                  "additionalResourceOptions": ["value::all"],
                  "showDefault": false
                },
                "timeContext": {
                  "durationMs": 0
                },
                "timeContextFromParameter": "Timeframe",
                "queryType": 0,
                "resourceType": "microsoft.kubernetes/connectedclusters",
                "value": ["value::all"]
              }
            ],
            "style": "above",
            "queryType": 0,
            "resourceType": "microsoft.kubernetes/connectedclusters"
          },
          "name": "Parameters"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "links": [
              {
                "id": "f4f514d3-084b-4264-81c4-7b408ce79ca9",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Utilization Overview",
                "subTarget": "Overview",
                "style": "link"
              },
              {
                "id": "8a83bf60-656e-4f35-a8fb-c5e3d338644a",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Node CPU & Memory View",
                "subTarget": "NodeCPU",
                "style": "link"
              },
              {
                "id": "09908d48-eac3-4849-b247-75d4baa482ec",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Node Network View",
                "subTarget": "Network",
                "style": "link"
              },
              {
                "id": "58795621-604f-450e-ad0a-57a65d06fc4f",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Node System Log",
                "subTarget": "Syslog",
                "style": "link"
              },
              {
                "id": "23908ade-64e0-45f2-83f1-cec735bb95cf",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Capacity Planning",
                "subTarget": "Capacity",
                "style": "link"
              }
            ]
          },
          "name": "links - 4"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "Resource Utilization (CPU, Memory, Disk) overview",
            "items": [
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Name startswith \"node_\"\r\n| summarize dcount(Computer)",
                        "size": 3,
                        "title": "Servers Connected",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "dcount_Computer",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 0,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName, \"/\", _ResourceId)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n//| where isnotnull(Rate)\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate))",
                        "size": 3,
                        "title": "CPU Used",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "CpuUsage",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7 - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let servercnt =\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize dcount(tostring(HostName));\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| summarize disk_per_server=avg(Val)\r\n| extend Disk_capacity = disk_per_server * toscalar(servercnt)",
                        "size": 3,
                        "title": "Disk Capacity",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "Disk_capacity",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7 - Copy - Copy - Copy - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let diskfree = InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_filesystem_avail_bytes'\r\n| summarize diskfree=avg(Val);\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_filesystem_size_bytes'\r\n| summarize disktotal=avg(Val)\r\n| extend usedmem = 100 - (100 * (toscalar(diskfree) / disktotal ))",
                        "size": 3,
                        "title": "Disk Used",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "usedmem",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7 - Copy - Copy - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let servercnt =\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemTotal_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize dcount(tostring(HostName));\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemTotal_bytes'\r\n| summarize mem_per_server = avg(Val)\r\n| extend Memory_capacity = mem_per_server * toscalar(servercnt)",
                        "size": 3,
                        "title": "Memory Capacity",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "Memory_capacity",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7 - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let memfree = InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemFree_bytes'\r\n| summarize memfree=avg(Val);\r\nlet memcache = InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Cached_bytes'\r\n| summarize memcache=avg(Val);\r\nlet membuffer = InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Buffers_bytes'\r\n| summarize membuffer=avg(Val);\r\nInsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemTotal_bytes'\r\n| summarize memtotal=avg(Val)\r\n| extend usedmem = 100 * (1-((toscalar(memfree) + toscalar(memcache) + toscalar(membuffer))/memtotal))",
                        "size": 3,
                        "title": "Memory Used",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "usedmem",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "12",
                      "name": "query - 7 - Copy - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let totalcount =  Heartbeat\r\n| where Computer in ({Computer})\r\n| summarize dcount(Computer);\r\n Heartbeat\r\n| where Computer in ({Computer})\r\n| summarize LastHeartbeat = max(TimeGenerated) by Computer\r\n| where LastHeartbeat < ago(1h)\r\n| summarize inactive=count()\r\n| project value=iff(inactive==0, strcat(\"All \", toscalar(totalcount) , \" nodes are active\") , strcat(tostring(inactive),\" out of \", tostring(toscalar(totalcount)), \" are inactive\" ))\r\n//| project value=strcat(\"3 out of 3 nodes are active\")",
                        "size": 3,
                        "title": "Inactive Agents (missing heartbeats)",
                        "noDataMessage": "No inactive agents found",
                        "noDataMessageStyle": 3,
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "card",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "State",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "State",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Unhealthy",
                                  "representation": "2",
                                  "text": ""
                                },
                                {
                                  "operator": "==",
                                  "thresholdValue": "Healthy",
                                  "representation": "success",
                                  "text": ""
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": "success",
                                  "text": "{0}{1}"
                                }
                              ],
                              "compositeBarSettings": {
                                "labelText": "",
                                "columnSettings": []
                              }
                            }
                          },
                          "rightContent": {
                            "columnMatch": "Count",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "none"
                            }
                          },
                          "showBorder": true
                        },
                        "textSettings": {
                          "style": "bignumber"
                        }
                      },
                      "customWidth": "20",
                      "name": "AgentsSummary",
                      "styleSettings": {
                        "padding": "10px",
                        "maxWidth": "20%"
                      }
                    }
                  ]
                },
                "name": "Overview tiles",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName, \"/\", _ResourceId)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n//| where isnotnull(Rate)\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate)) by HostName",
                  "size": 0,
                  "title": "Heatmap for the CPU Process time of the nodes",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "graph",
                  "graphSettings": {
                    "type": 2,
                    "topContent": {
                      "columnMatch": "HostName",
                      "formatter": 1
                    },
                    "centerContent": {
                      "columnMatch": "CpuUsage",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "none"
                      },
                      "numberFormat": {
                        "unit": 1,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 2
                        }
                      }
                    },
                    "nodeIdField": "HostName",
                    "sourceIdField": "Computer",
                    "targetIdField": "Computer",
                    "graphOrientation": 3,
                    "showOrientationToggles": false,
                    "nodeSize": null,
                    "staticNodeSize": 100,
                    "colorSettings": {
                      "nodeColorField": "CpuUsage",
                      "type": 4,
                      "heatmapPalette": "greenRed",
                      "heatmapMin": null,
                      "heatmapMax": null
                    },
                    "hivesMargin": 5
                  }
                },
                "customWidth": "33",
                "name": "query - 11",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let diskfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_avail_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Disk_Free=avg(Val) by hostname;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Disk_Total = avg(Val) by hostname\r\n| join diskfree on hostname\r\n| extend Disk_Used = 100 - (100 * (Disk_Free / Disk_Total ))",
                  "size": 0,
                  "title": "Heatmap for the Disk usage of the nodes",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "graph",
                  "graphSettings": {
                    "type": 2,
                    "topContent": {
                      "columnMatch": "hostname",
                      "formatter": 1
                    },
                    "centerContent": {
                      "columnMatch": "Disk_Used",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "none"
                      },
                      "numberFormat": {
                        "unit": 1,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "nodeIdField": "hostname",
                    "sourceIdField": "Computer",
                    "targetIdField": "Computer",
                    "graphOrientation": 3,
                    "showOrientationToggles": false,
                    "nodeSize": null,
                    "staticNodeSize": 100,
                    "colorSettings": {
                      "nodeColorField": "Disk_Used",
                      "type": 4,
                      "heatmapPalette": "greenRed",
                      "heatmapMin": null,
                      "heatmapMax": null
                    },
                    "hivesMargin": 5
                  }
                },
                "customWidth": "33",
                "name": "query - 11 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let memfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemFree_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize memfree=avg(Val) by HostName;\r\nlet memcache = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Cached_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize memcache=avg(Val) by HostName\r\n| join (memfree) on HostName;\r\nlet membuffer = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Buffers_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize membuffer=avg(Val) by HostName\r\n| join (memcache) on HostName;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemTotal_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize memtotal=avg(Val) by HostName\r\n| join (membuffer) on HostName\r\n| project HostName, memfree, memcache, membuffer, memtotal\r\n| extend usedmem = 100*(1 - ((memfree + memcache + membuffer)/memtotal))\r\n//| extend usedmem = 100 * (1-((toscalar(memfree) + toscalar(memcache) + toscalar(membuffer))/memtotal))",
                  "size": 0,
                  "title": "Heatmap for the Memory usage of the nodes",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "graph",
                  "graphSettings": {
                    "type": 2,
                    "topContent": {
                      "columnMatch": "HostName",
                      "formatter": 1
                    },
                    "centerContent": {
                      "columnMatch": "usedmem",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "none"
                      },
                      "numberFormat": {
                        "unit": 1,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "nodeIdField": "HostName",
                    "sourceIdField": "Computer",
                    "targetIdField": "Computer",
                    "graphOrientation": 3,
                    "showOrientationToggles": false,
                    "nodeSize": null,
                    "staticNodeSize": 100,
                    "colorSettings": {
                      "nodeColorField": "usedmem",
                      "type": 4,
                      "heatmapPalette": "greenRed",
                      "heatmapMin": null,
                      "heatmapMax": null
                    },
                    "hivesMargin": 5
                  }
                },
                "customWidth": "33",
                "name": "query - 11 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 1,
                "content": {
                  "json": "### 💡 _Above heatmaps show an average over the timeframe selected._ "
                },
                "name": "text - 13 - Copy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics \r\n| where Namespace == \"prometheus\"and Name contains \"node_\"\r\n| summarize by Name\r\n| extend Category=case( Name contains \"cpu\", \"CPU\",  \r\n                        Name contains \"memory\", \"Memory\",\r\n                        Name contains \"filesystem\", \"File System\",\r\n                        Name contains \"network\", \"Network\",\r\n                        \"Others\")\r\n| project Category, Name\r\n| order by Category asc\r\n",
                  "size": 2,
                  "title": "List the collected performance counters",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Category",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Namespace",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Computer",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "count_",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["Category"],
                      "expandTopLevel": true
                    }
                  },
                  "tileSettings": {
                    "showBorder": false
                  },
                  "graphSettings": {
                    "type": 0
                  }
                },
                "customWidth": "30",
                "name": "query - 1",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let times = toscalar(\r\n    Heartbeat\r\n    | summarize pack_array(min(TimeGenerated), max(TimeGenerated))\r\n)\r\n;\r\nHeartbeat\r\n| where TimeGenerated > todatetime(times[0])\r\n| where TimeGenerated < todatetime(times[1])\r\n| summarize heartbeat_per_hour=count() by bin(TimeGenerated, 1h), Computer\r\n| extend available_per_hour=iff(heartbeat_per_hour>0, true, false)\r\n| summarize total_available_hours_calculated=countif(available_per_hour==true) by Computer \r\n| extend duration = datetime_diff('hour',todatetime(times[1]),todatetime(times[0]))\r\n| extend total_available_hours=iff(total_available_hours_calculated>duration,duration,total_available_hours_calculated)\r\n| extend availability_rate= (total_available_hours*100)/duration",
                  "size": 0,
                  "title": "Availability rate",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "total_available_hours_calculated",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "duration",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "total_available_hours",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "availability_rate",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "max": 100,
                          "palette": "redGreen"
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      }
                    ]
                  },
                  "graphSettings": {
                    "type": 0,
                    "topContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "centerContent": {
                      "columnMatch": "totalAvailableHours",
                      "formatter": 1,
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  }
                },
                "customWidth": "20",
                "name": "query - 10",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "title": "FileSystem Status",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let usedDiskUnhealthyThreshold = 90;\r\nlet usedDiskCriticalThreshold = 99;\r\nlet diskfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_avail_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName), device = tostring(Json.device)\r\n| extend NodeDisk = strcat(hostname, \"/\", device)\r\n| where hostname in ({Computer})\r\n| summarize Disk_Free=max(Val) by NodeDisk;\r\nlet data = materialize(InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName), device = tostring(Json.device)\r\n| extend NodeDisk = strcat(hostname, \"/\", device)\r\n| where hostname in ({Computer})\r\n| summarize Disk_Total = max(Val) by  NodeDisk\r\n| join diskfree on  NodeDisk\r\n//| extend Disk_Used = 100 - (100 * (Disk_Free / Disk_Total ))\r\n| extend Disk_Used = ((Disk_Total - Disk_Free) / Disk_Total) * 100\r\n| extend State = iff(Disk_Used >= usedDiskCriticalThreshold, 'Critical FileSystems', iif((Disk_Used >= usedDiskUnhealthyThreshold and Disk_Used < usedDiskCriticalThreshold), 'Unhealthy FileSystems', 'Healthy FileSystems'))\r\n);\r\ndata\r\n| summarize Count = count(), Disks = makeset(NodeDisk) by State\r\n| union (\r\n    data\r\n    | summarize Count = count(), Disks = dynamic([\"*\"])\r\n    | extend State = 'All FileSystems'\r\n)\r\n| join kind = fullouter (datatable (State: string) ['All FileSystems', 'Critical FileSystems', 'Unhealthy FileSystems', 'Healthy FileSystems']) on State\r\n| extend Count = iff(State == '', 0, Count), Disks = iff(State == '', dynamic([]), Disks)\r\n| order by Count desc",
                        "size": 4,
                        "aggregation": 2,
                        "timeContextFromParameter": "Timeframe",
                        "timeBrushParameterName": "filteredTimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "State1",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "State1",
                            "formatter": 18,
                            "formatOptions": {
                              "thresholdsOptions": "icons",
                              "thresholdsGrid": [
                                {
                                  "operator": "==",
                                  "thresholdValue": "Critical FileSystems",
                                  "representation": "4",
                                  "text": ""
                                },
                                {
                                  "operator": "==",
                                  "thresholdValue": "Unhealthy FileSystems",
                                  "representation": "2",
                                  "text": ""
                                },
                                {
                                  "operator": "==",
                                  "thresholdValue": "Healthy FileSystems",
                                  "representation": "success",
                                  "text": ""
                                },
                                {
                                  "operator": "Default",
                                  "thresholdValue": null,
                                  "representation": null,
                                  "text": ""
                                }
                              ]
                            },
                            "numberFormat": {
                              "unit": 0,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            }
                          },
                          "rightContent": {
                            "columnMatch": "Count",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "none"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2
                              }
                            }
                          },
                          "showBorder": true
                        }
                      },
                      "name": "tiles"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let usedFileSystemUnhealthyThreshold = 90;\r\nlet usedFileSystemCriticalThreshold = 99;\r\nlet FileSystemfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_avail_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName), device = tostring(Json.device)\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(hostname, \"/\", device)\r\n| summarize FileSystem_Free=max(Val) by hostname,device;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName), device = tostring(Json.device)\r\n| extend NodeDisk = strcat(hostname, \"/\", device)\r\n| where hostname in ({Computer})\r\n| summarize FileSystem_Total = max(Val) by  hostname,device\r\n| join FileSystemfree on  hostname,device\r\n| extend FileSystem_Used = (FileSystem_Total - FileSystem_Free)\r\n| project-away hostname1, device1\r\n| extend  hostname = strcat('🖥️ ',  hostname)\r\n| extend FileSystem_Used_pct = (FileSystem_Used / FileSystem_Total ) * 100\r\n| extend State = iff(FileSystem_Used_pct >= usedFileSystemCriticalThreshold, 'Critical FileSystems', iif((FileSystem_Used_pct >= usedFileSystemUnhealthyThreshold and FileSystem_Used_pct < usedFileSystemCriticalThreshold), 'Unhealthy FileSystems', 'Healthy FileSystems'))\r\n| order by hostname asc\r\n",
                        "size": 3,
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "hostname",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "FileSystem_Total",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "FileSystem_Free",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "FileSystem_Used",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "FileSystem_Used_pct",
                              "formatter": 5,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "Disk_Total",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "Disk_Free",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "Disk_Used",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            }
                          ],
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": ["hostname"],
                            "expandTopLevel": true
                          }
                        }
                      },
                      "name": "query - 4 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "customWidth": "50",
                "name": "group - 13 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_receive_bytes_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize RX_bytes = avg(Rate) by TimeGenerated, tostring(hostname), tostring(device)\r\n| order by RX_bytes desc\r\n| limit 5\r\n",
                        "size": 3,
                        "title": "Top 5 devices receiving bytes",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "device",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "RX_bytes",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "yellowGreenBlue"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                              }
                            }
                          },
                          "showBorder": true,
                          "size": "auto"
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 0",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_bytes_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize RX_bytes = avg(Rate) by TimeGenerated, tostring(hostname), tostring(device)\r\n| order by RX_bytes desc\r\n| limit 5\r\n",
                        "size": 3,
                        "title": "Top 5 devices transmitting bytes",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "device",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "RX_bytes",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "yellowGreenBlue"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                              }
                            }
                          },
                          "showBorder": true,
                          "size": "auto"
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 0 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_disk_reads_completed_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize RX_bytes = avg(Rate) by TimeGenerated, tostring(hostname), tostring(device)\r\n| order by RX_bytes desc\r\n| limit 5",
                        "size": 3,
                        "title": "Reads completed",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "hostname",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "RX_bytes",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                              }
                            }
                          },
                          "secondaryContent": {
                            "columnMatch": "device"
                          },
                          "showBorder": true,
                          "size": "auto"
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 2",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_disk_writes_completed_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize RX_bytes = avg(Rate) by TimeGenerated, tostring(hostname), tostring(device)\r\n| order by RX_bytes desc\r\n| limit 5",
                        "size": 3,
                        "title": "Writes completed",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {
                            "columnMatch": "hostname",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "RX_bytes",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                              }
                            }
                          },
                          "secondaryContent": {
                            "columnMatch": "device"
                          },
                          "showBorder": true,
                          "size": "auto"
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 2 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "customWidth": "100",
                "name": "group - 2"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Metric trend analysis across cluster"
                },
                "name": "text - 13"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookcb26c82b-e13e-4687-9df6-ba037c06be1c",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--cpuUsagePercentage",
                            "aggregation": 4,
                            "splitBy": null,
                            "columnName": "CPU Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--cpuUsagePercentage",
                            "aggregation": 3,
                            "columnName": "CPU Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--cpuUsagePercentage",
                            "aggregation": 2,
                            "columnName": "CPU Usage"
                          }
                        ],
                        "title": "CPU Usage Trend (Avg, Max, Min) timeline",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 6",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookcb26c82b-e13e-4687-9df6-ba037c06be1c",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--DiskUsedPercentage",
                            "aggregation": 4,
                            "splitBy": null,
                            "columnName": "Disk Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--DiskUsedPercentage",
                            "aggregation": 3,
                            "columnName": "Disk Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--DiskUsedPercentage",
                            "aggregation": 2,
                            "columnName": "Disk Usage"
                          }
                        ],
                        "title": "Disk Usage Trend (Avg, Max, Min) timeline",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 6 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookcb26c82b-e13e-4687-9df6-ba037c06be1c",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryRssPercentage",
                            "aggregation": 4,
                            "splitBy": null,
                            "columnName": "Memory RSS Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryRssPercentage",
                            "aggregation": 3,
                            "columnName": "Memory RSS Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryRssPercentage",
                            "aggregation": 2,
                            "columnName": "Memory RSS Usage"
                          }
                        ],
                        "title": "Memory RSS Usage Trend (Avg, Max, Min) timeline",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 6 - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookcb26c82b-e13e-4687-9df6-ba037c06be1c",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryWorkingSetPercentage",
                            "aggregation": 4,
                            "splitBy": null,
                            "columnName": "Memory WS Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryWorkingSetPercentage",
                            "aggregation": 3,
                            "columnName": "Memory WS Usage"
                          },
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryWorkingSetPercentage",
                            "aggregation": 2,
                            "columnName": "Memory WS Usage"
                          }
                        ],
                        "title": "Memory WS Usage Trend (Avg, Max, Min) timeline",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 6 - Copy - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 14",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 1,
                "content": {
                  "json": "## Metric trend analysis across each server"
                },
                "name": "text - 13 - Copy"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookf7af6433-983c-413d-9b46-5137515ebb2a",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--cpuUsagePercentage",
                            "aggregation": 4,
                            "splitBy": null
                          }
                        ],
                        "title": "CPU Usage across servers",
                        "gridFormatType": 1,
                        "tileSettings": {
                          "showBorder": false,
                          "titleContent": {
                            "columnMatch": "Name",
                            "formatter": 13
                          },
                          "leftContent": {
                            "columnMatch": "Value",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        },
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbooka8cff541-3e1f-4247-a731-3c35d2927287",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--DiskUsedPercentage",
                            "aggregation": 4,
                            "splitBy": null
                          }
                        ],
                        "title": "Disk Usage across servers",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 4",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbookb59f22b3-9c02-4941-be3f-06fe4f79f591",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryRssPercentage",
                            "aggregation": 4,
                            "splitBy": null
                          }
                        ],
                        "title": "Memory Rss across servers",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 2",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 10,
                      "content": {
                        "chartId": "workbook7adb4c53-5e3f-4097-ac0c-4ce43d2cfefe",
                        "version": "MetricsItem/2.0",
                        "size": 0,
                        "chartType": 2,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "metricScope": 0,
                        "resourceParameter": "Resource",
                        "resourceIds": ["{Resource}"],
                        "timeContextFromParameter": "Timeframe",
                        "timeContext": {
                          "durationMs": 1800000
                        },
                        "metrics": [
                          {
                            "namespace": "insights.container/nodes",
                            "metric": "insights.container/nodes--memoryWorkingSetPercentage",
                            "aggregation": 4,
                            "splitBy": null
                          }
                        ],
                        "title": "Memory working set across servers",
                        "gridSettings": {
                          "rowLimit": 10000
                        }
                      },
                      "customWidth": "50",
                      "name": "metric - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ],
                  "exportParameters": true
                },
                "conditionalVisibility": {
                  "parameterName": "setTab",
                  "comparison": "isEqualTo",
                  "value": "Overview"
                },
                "name": "Metrics across each server",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Overview"
          },
          "name": "Overview",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "CPU Usage Alert Trend",
            "items": [
              {
                "type": 10,
                "content": {
                  "chartId": "workbook58ff2fec-cc61-42f5-bbd0-a5a70f67af63",
                  "version": "MetricsItem/2.0",
                  "size": 3,
                  "chartType": -1,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "metricScope": 0,
                  "resourceIds": [
                    "/subscriptions/a3eeb848-665a-4dbf-80a4-eb460930fb23/resourceGroups/afoinc-pure-lma/providers/Microsoft.Kubernetes/connectedClusters/afoinc-pure-lma-cluster"
                  ],
                  "timeContextFromParameter": "Timeframe",
                  "timeContext": {
                    "durationMs": 604800000
                  },
                  "metrics": [
                    {
                      "namespace": "insights.container/nodes",
                      "metric": "insights.container/nodes--cpuUsagePercentage",
                      "aggregation": 4,
                      "splitBy": "host",
                      "splitBySortOrder": -1,
                      "splitByLimit": 10,
                      "columnName": "Cpu Used %"
                    }
                  ],
                  "title": "CPU Used Percentage",
                  "gridFormatType": 1,
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "Segment",
                      "formatter": 13,
                      "formatOptions": {
                        "linkColumn": "Name",
                        "linkTarget": "Resource",
                        "showIcon": true
                      }
                    },
                    "leftContent": {
                      "columnMatch": "Value",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "coldHot"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  },
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Subscription",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Name",
                        "formatter": 13,
                        "formatOptions": {
                          "linkTarget": "Resource"
                        }
                      },
                      {
                        "columnMatch": ".*\\/cpuUsagePercentage$",
                        "formatter": 1
                      }
                    ],
                    "rowLimit": 10000
                  }
                },
                "customWidth": "50",
                "name": "metric - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf \r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuUsage\"\r\n| summarize Avg_CPU_Usage=bin(avg(CounterValue),0.01) / 1000000000 by Computer, bin(TimeGenerated, 30m)\r\n| where Avg_CPU_Usage > 2\r\n| summarize Alert_Count = count() by Computer\r\n",
                  "size": 3,
                  "title": "Alert count for each host collected over 30 min interval",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "Alert_Count",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "coldHot"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false,
                    "sortCriteriaField": "Alert_Count",
                    "size": "auto"
                  }
                },
                "customWidth": "50",
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf \r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuUsage\"\r\n| summarize Avg_CPU_Usage=bin(avg(CounterValue),0.01) / 1000000000 by Computer, bin(TimeGenerated, 30m)\r\n| order by Avg_CPU_Usage desc\r\n| limit 10",
                  "size": 0,
                  "title": "Top 10 Avg CPU Usage collected over 30 min interval",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Avg_CPU_Usage",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": ">=",
                              "thresholdValue": "2",
                              "representation": "4",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf \r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuUsage\"\r\n| summarize Avg_CPU_Usage=bin(avg(CounterValue),0.01) / 1000000000 by Computer, bin(TimeGenerated, 30m)",
                  "size": 0,
                  "title": "Av CPU Usage for every host over time",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "unstackedbar",
                  "chartSettings": {
                    "customThresholdLine": "2",
                    "customThresholdLineStyle": 5,
                    "xSettings": {
                      "numberFormatSettings": {
                        "unit": 0,
                        "options": {
                          "style": "decimal",
                          "useGrouping": true
                        }
                      }
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 3",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let CPU_Usage =\r\nPerf\r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuusage\"\r\n| summarize CPU_Usage = round((avg(CounterValue) / 1000000000),3)  by Computer, bin(TimeGenerated, 30m), CounterName\r\n| order by todatetime(TimeGenerated) desc;\r\nlet CPU_Capacity =\r\nPerf\r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuCapacity\"\r\n| summarize CPU_Capacity = round((avg(CounterValue) / 1000000000),3)  by Computer, bin(TimeGenerated, 30m), CounterName\r\n| order by todatetime(TimeGenerated) desc;\r\nlet CPU_Allocatable =\r\nPerf\r\n| where ObjectName == \"K8SNode\" and CounterName contains \"cpuAllocatable\"\r\n| summarize CPU_Allocatable = round((avg(CounterValue) / 1000000000),3)  by Computer, bin(TimeGenerated, 30m), CounterName\r\n| order by todatetime(TimeGenerated) desc;\r\nlet CPU_Usage_Capacity = CPU_Usage\r\n| join CPU_Capacity on Computer, TimeGenerated\r\n| project TimeGenerated, Computer, CPU_Capacity, CPU_Usage\r\n| order by todatetime(TimeGenerated) desc;\r\nCPU_Allocatable\r\n| join CPU_Usage_Capacity on Computer, TimeGenerated\r\n| project TimeGenerated, Computer, CPU_Capacity, CPU_Allocatable, CPU_Usage\r\n| order by todatetime(TimeGenerated) desc\r\n| extend cpupercentused = round((CPU_Usage / CPU_Capacity )*100, 2)\r\n| extend cpupercentfree = round(100 - cpupercentused, 2)\r\n| extend Notification = case(cpupercentused <= 50, \"OK\", cpupercentused <= 80, \"Warning\", \"Critical\")\r\n| project-reorder TimeGenerated, Computer, CPU_Capacity, CPU_Allocatable, CPU_Usage",
                  "size": 2,
                  "title": "CPU usage agregated over 30 mins",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "cpupercentused",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": [
                              {
                                "columnName": "cpupercentused",
                                "color": "orange"
                              },
                              {
                                "columnName": "cpupercentfree",
                                "color": "blue"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "columnMatch": "cpupercentfree",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Notification",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "OK",
                              "representation": "Available",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Warning",
                              "representation": "2",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Critical",
                              "representation": "4",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "1",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 3",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf\r\n| make-series Trend = avg(CounterValue) default = 0 on TimeGenerated from ago(7d) to now() step 1h by Computer\r\n| project-away TimeGenerated\r\n| join kind = inner (Perf\r\n    | summarize Avg_CPU_Usage=avg(CounterValue) by Computer\r\n    ) on Computer\r\n| project Computer, Avg_CPU_Usage_cores = round((Avg_CPU_Usage / 1000000000),2), Trend\r\n| order by Avg_CPU_Usage_cores desc\r\n",
                  "size": 0,
                  "title": "Avg CPU Usage trend",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Trend",
                        "formatter": 10,
                        "formatOptions": {
                          "palette": "coldHot"
                        }
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 2",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Alerts"
          },
          "name": "Alerts",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf\r\n| project TimeGenerated, Computer, CounterValue\r\n| summarize CpuUsage=avg(CounterValue), ActualCpuUsage=avg(CounterValue) by bin(TimeGenerated, 1d), Computer\r\n| summarize Timestamp=make_list(TimeGenerated), CpuUsage=make_list(CpuUsage) by Computer\r\n| extend series_decompose_anomalies(CpuUsage)\r\n| mv-expand Timestamp, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score, series_decompose_anomalies_CpuUsage_baseline\r\n| project-away series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score\r\n| project-rename ExpectedCpuUsage=series_decompose_anomalies_CpuUsage_baseline\r\n| extend Gap = todecimal(CpuUsage)-todecimal(ExpectedCpuUsage)\r\n| where Gap != 0\r\n| extend Trend=iff(Gap>0, \"Up\", \"Down\")\r\n| extend ActualVsExpectedAsPercent = round(todecimal(CpuUsage)*100/todecimal(ExpectedCpuUsage), 3)\r\n//| where ActualVsExpectedAsPercent > 150 or ActualVsExpectedAsPercent < 95\r\n| sort by todatetime(Timestamp) asc\r\n| extend Avg_CPU_Usage = round(todecimal(CpuUsage) / 1000000000,3), Expected_Avg_CPU_Usage = round(todecimal(ExpectedCpuUsage) / 1000000000,3)\r\n//| extend cputype = gettype(Avg_CPU_Usage)\r\n| project Computer, Timestamp=format_datetime(todatetime(Timestamp), 'yyyy-MM-dd'), Trend, Avg_CPU_Usage, Expected_Avg_CPU_Usage, ActualVsExpectedAsPercent",
                  "size": 2,
                  "title": "Daily Cpu Usage Trend analysis",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Computer",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Trend",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Up",
                              "representation": "trendup",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Down",
                              "representation": "trenddown",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "ActualVsExpectedAsPercent",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "minimumFractionDigits": 1,
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      {
                        "columnMatch": "CpuUsage",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "minimumFractionDigits": 2
                          }
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["Computer"],
                      "expandTopLevel": true
                    }
                  },
                  "graphSettings": {
                    "type": 0,
                    "topContent": {},
                    "nodeIdField": "Computer",
                    "sourceIdField": "Trend",
                    "targetIdField": "CpuUsage",
                    "graphOrientation": 3,
                    "showOrientationToggles": true,
                    "nodeSize": null,
                    "staticNodeSize": 100,
                    "colorSettings": {
                      "nodeColorField": "Trend",
                      "type": 3,
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Up",
                          "representation": "red"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Down",
                          "representation": "green"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue"
                        }
                      ]
                    },
                    "hivesMargin": 5
                  }
                },
                "customWidth": "40",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf\r\n| where Computer in ({Computer})\r\n//| where TimeGenerated >= ago(7d)\r\n| where CounterName contains \"cpuUsage\"\r\n| summarize CpuUsage=avg(CounterValue) by bin(TimeGenerated, 30m), Computer\r\n| order by TimeGenerated asc\r\n| summarize Timestamp=make_list(TimeGenerated), CpuUsage=make_list(CpuUsage) by Computer\r\n| extend series_decompose_anomalies(CpuUsage, 1.5, -1, 'linefit')\r\n| mv-expand Timestamp, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score, series_decompose_anomalies_CpuUsage_baseline\r\n| project-away series_decompose_anomalies_CpuUsage_ad_score\r\n| project-rename ExpectedCpuUsage=series_decompose_anomalies_CpuUsage_baseline\r\n| project-rename anomalies=series_decompose_anomalies_CpuUsage_ad_flag\r\n| project Timestamp, toint(CpuUsage), toint(ExpectedCpuUsage), toint(anomalies)\r\n| render anomalychart with(anomalycolumns=anomalies)",
                  "size": 3,
                  "title": "CPU Usage Actual vs Expected behaviour",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "timechart",
                  "chartSettings": {
                    "xAxis": "Timestamp"
                  }
                },
                "customWidth": "60",
                "name": "query - 1",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Perf\r\n| where TimeGenerated >= ago(7d)\r\n| where CounterName contains \"cpuUsage\"\r\n| summarize CpuUsage=avg(CounterValue) by Computer, bin(TimeGenerated,30m)\r\n| order by TimeGenerated\r\n| summarize CpuUsage=make_list(CpuUsage),TimeGenerated=make_list(TimeGenerated) by Computer\r\n| extend series_decompose_anomalies(CpuUsage)\r\n| mv-expand TimeGenerated, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_baseline\r\n| where series_decompose_anomalies_CpuUsage_ad_flag == 1\r\n| project todatetime(TimeGenerated), Computer, Actual_CPU_Usage = round(todecimal(CpuUsage) / 1000000000, 3), Outlier_CPU_Usage = round(todecimal(series_decompose_anomalies_CpuUsage_baseline) / 1000000000, 3)\r\n//| project-rename Predicted_CpuUsage = todecimal(series_decompose_anomalies_CpuUsage_baseline)",
                  "size": 0,
                  "title": "Anomaly (Outlier) CPU Usage detected over last 7 days",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "table",
                  "sortBy": [],
                  "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "Predicted_CpuUsage",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  },
                  "graphSettings": {
                    "type": 0,
                    "topContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "centerContent": {
                      "columnMatch": "Avg_CPU_Usage",
                      "formatter": 1,
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  }
                },
                "customWidth": "40",
                "name": "query - 2",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let dt = 30m;\r\nlet horizon=3d;\r\nPerf\r\n| where CounterName contains \"cpuUsage\"\r\n| make-series CpuUsage=avg(CounterValue) on TimeGenerated from ago(21d) to now()+horizon step dt by 10m\r\n| extend Predicted_CpuUSage = series_decompose_forecast(CpuUsage, toint(horizon/dt))\r\n| render timechart",
                  "size": 0,
                  "title": "CPU Usage Forecastig",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "chartSettings": {
                    "ySettings": {
                      "min": 1
                    }
                  }
                },
                "customWidth": "60",
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Trend"
          },
          "name": "Trend"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics \r\n| where Namespace == \"prometheus\"and Name contains \"node\"\r\n| summarize by Name\r\n| extend Category=case( Name contains \"cpu\", \"CPU\", \r\n                        Name contains \"hwmon\", \"Hardware Monitor\", \r\n                        Name contains \"network\", \"Network\",\r\n                        Name contains \"memory\", \"Memory\",\r\n                        Name contains \"filesystem\", \"File System\",\r\n                        Name contains \"netstat\", \"Network Stat\",\r\n                        \"Others\")\r\n| project Category, Name\r\n| order by Category asc",
                  "size": 3,
                  "title": "Metrics collected from Node Storage",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Category",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["Category"],
                      "expandTopLevel": false
                    }
                  }
                },
                "customWidth": "25",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let TT = InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_time_seconds\"\r\n| summarize TT=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_boot_time_seconds\"\r\n| summarize BT=avg(Val)\r\n| extend Uptime = toscalar(TT) - BT\r\n",
                              "size": 3,
                              "title": "Uptime",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "Uptime",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "blue"
                                  },
                                  "numberFormat": {
                                    "unit": 24,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy - Copy - Copy - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_filesystem_size_bytes\"\r\n| summarize FSUsed=avg(Val)\r\n",
                              "size": 3,
                              "title": "Total Root FS",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "FSUsed",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "blue"
                                  },
                                  "numberFormat": {
                                    "unit": 2,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy - Copy - Copy - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_memory_MemTotal_bytes\"\r\n| summarize MemTotal=avg(Val)",
                              "size": 3,
                              "title": "Ram Used",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "MemTotal",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "blue"
                                  },
                                  "numberFormat": {
                                    "unit": 2,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == \"prometheus\" and Name contains \"node_hwmon_temp_celsius\"\r\n//| extend json=parse_json(todynamic(Tags))\r\n//| extend component=tostring(json.component)\r\n//| where component == \"BAY\"\r\n| summarize Temp=avg(Val)",
                              "size": 3,
                              "title": "Hardware Avg Temperature",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "Temp",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": ">=",
                                        "thresholdValue": "50",
                                        "representation": "4",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let MemTotal = InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_memory_MemTotal_bytes\"\r\n| summarize MemTotal=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_memory_MemFree_bytes\"\r\n| summarize MemFree=avg(Val)\r\n| extend MemUsed = ((toscalar(MemTotal) - MemFree)/toscalar(MemTotal) )* 100\r\n",
                              "size": 3,
                              "title": "Ram Used",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "MemUsed",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": ">=",
                                        "thresholdValue": "80",
                                        "representation": "4",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  },
                                  "numberFormat": {
                                    "unit": 1,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let SwapTotal = InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_memory_SwapTotal_bytes\"\r\n| summarize SwapTotal=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_memory_SwapFree_bytes\"\r\n| summarize SwapFree=avg(Val)\r\n| extend SwapUsed = ((toscalar(SwapTotal) - SwapFree)/toscalar(SwapTotal) )* 100\r\n",
                              "size": 3,
                              "title": "SWAP Used",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "SwapUsed",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": ">=",
                                        "thresholdValue": "80",
                                        "representation": "4",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  },
                                  "numberFormat": {
                                    "unit": 1,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let FSTotal = InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_filesystem_avail_bytes\"\r\n| summarize FSTotal=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_filesystem_size_bytes\"\r\n| summarize FSUsed=avg(Val)\r\n| extend FSUsedP = FSUsed/toscalar(FSTotal) * 100\r\n",
                              "size": 3,
                              "title": "Root FS Used",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {},
                                "leftContent": {
                                  "columnMatch": "FSUsedP",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": ">=",
                                        "thresholdValue": "80",
                                        "representation": "4",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  },
                                  "numberFormat": {
                                    "unit": 1,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 1
                                    }
                                  }
                                },
                                "showBorder": false,
                                "size": "auto"
                              },
                              "textSettings": {
                                "style": "bignumber"
                              }
                            },
                            "customWidth": "25",
                            "name": "query - 0 - Copy - Copy - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          }
                        ]
                      },
                      "name": "group - 0"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_receive_bytes_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| summarize rcv_bytes=sum(Val) by device\r\n| order by rcv_bytes desc\r\n| limit 5\r\n",
                              "size": 3,
                              "title": "Top 5 devices receiving bytes",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "device",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "rcv_bytes",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "yellowGreenBlue"
                                  },
                                  "numberFormat": {
                                    "unit": 11,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 2,
                                      "maximumSignificantDigits": 3
                                    }
                                  }
                                },
                                "showBorder": true,
                                "size": "auto"
                              }
                            },
                            "customWidth": "50",
                            "name": "query - 0",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_bytes_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| summarize rcv_bytes=sum(Val) by device\r\n| order by rcv_bytes desc\r\n| limit 5\r\n",
                              "size": 3,
                              "title": "Top 5 devices transmitting bytes",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "device",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "rcv_bytes",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "yellowGreenBlue"
                                  },
                                  "numberFormat": {
                                    "unit": 2,
                                    "options": {
                                      "style": "decimal",
                                      "maximumFractionDigits": 2,
                                      "maximumSignificantDigits": 3
                                    }
                                  }
                                },
                                "showBorder": true,
                                "size": "auto"
                              }
                            },
                            "customWidth": "50",
                            "name": "query - 0 - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_disk_reads_completed_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| summarize rcv_bytes=sum(Val) by device\r\n| order by rcv_bytes desc\r\n| limit 5",
                              "size": 3,
                              "title": "Reads completed",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "device",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "rcv_bytes",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "size": "auto"
                              }
                            },
                            "customWidth": "50",
                            "name": "query - 2",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_disk_writes_completed_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| summarize rcv_bytes=sum(Val) by device\r\n| order by rcv_bytes desc\r\n| limit 5",
                              "size": 3,
                              "title": "Writes completed",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "tiles",
                              "tileSettings": {
                                "titleContent": {
                                  "columnMatch": "device",
                                  "formatter": 1
                                },
                                "leftContent": {
                                  "columnMatch": "rcv_bytes",
                                  "formatter": 12,
                                  "formatOptions": {
                                    "palette": "auto"
                                  },
                                  "numberFormat": {
                                    "unit": 17,
                                    "options": {
                                      "maximumSignificantDigits": 3,
                                      "maximumFractionDigits": 2
                                    }
                                  }
                                },
                                "showBorder": true,
                                "size": "auto"
                              }
                            },
                            "customWidth": "50",
                            "name": "query - 2 - Copy",
                            "styleSettings": {
                              "showBorder": true
                            }
                          }
                        ]
                      },
                      "customWidth": "100",
                      "name": "group - 2"
                    }
                  ]
                },
                "customWidth": "75",
                "name": "group - 1"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "NodeO"
          },
          "name": "group - 8",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## CPU Utilization across each node"
                },
                "name": "text - 2"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n| summarize  cpu_irate = avg(cpu_irate) by bin(TimeGenerated,1m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Busy System",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| where mode == \"user\"\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n| summarize  cpu_irate = avg(cpu_irate) by bin(TimeGenerated,1m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Busy User",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cpu_irate"],
                          "group": "hostname",
                          "createOtherGroup": null,
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| where mode == \"iowait\"\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n| summarize  cpu_irate = avg(cpu_irate) by bin(TimeGenerated,1m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Busy IOWAIT",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cpu_irate"],
                          "group": "hostname",
                          "createOtherGroup": null,
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| where mode contains \"irq\"\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n| summarize  cpu_irate = avg(cpu_irate) by bin(TimeGenerated,1m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Busy IRQs",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cpu_irate"],
                          "group": "hostname",
                          "createOtherGroup": null,
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| where mode == 'idle'\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n| summarize  cpu_irate = avg(cpu_irate) by bin(TimeGenerated,1m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Idle",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cpu_irate"],
                          "group": "hostname",
                          "createOtherGroup": 5,
                          "seriesLabelSettings": [
                            {
                              "color": "green"
                            },
                            {
                              "color": "grayBlue"
                            }
                          ],
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend mode = tostring(Json.mode)\r\n| extend cpu = tostring(Json.cpu)\r\n| where hostname in ({Computer})\r\n| sort by hostname, mode, cpu asc, TimeGenerated asc\r\n| extend PrevTimeGenerated = iif(prev(hostname) != hostname or prev(cpu) != cpu, datetime(null), prev(TimeGenerated))\r\n| extend PrevVal = prev(Val)\r\n| where isnotnull(PrevTimeGenerated)\r\n| extend DeltaTime = datetime_diff('Second', TimeGenerated, PrevTimeGenerated)\r\n| extend cpu_irate = iif(PrevVal > Val, Val / DeltaTime, (Val - PrevVal) / DeltaTime)\r\n| project TimeGenerated, hostname, mode, cpu, Computer, cpu_irate\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "CPU Usage across CPU's",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cpu_irate"],
                          "group": "cpu",
                          "createOtherGroup": 5,
                          "seriesLabelSettings": [
                            {
                              "color": "green"
                            },
                            {
                              "color": "grayBlue"
                            }
                          ],
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 24,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 1,
                "content": {
                  "json": "## Memory Utilization across each node"
                },
                "name": "text - 2 - Copy"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemTotal_bytes'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize total_mem = avg(Val) by bin(TimeGenerated,15m), hostname\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Memory Total",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": false
                              }
                            },
                            "min": 20000000,
                            "max": 600000000000
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let mem_cache = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_Cached_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize mem_cache = avg(Val) by bin(TimeGenerated,15m), hostname;\r\nlet cachebuffer = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_Buffers_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize mem_buffer = avg(Val) by bin(TimeGenerated,15m), hostname\r\n| join mem_cache on TimeGenerated, hostname\r\n| extend cachebuffer = (mem_buffer + mem_cache); \r\nlet mem_free = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemFree_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize mem_free = avg(Val) by bin(TimeGenerated,15m), hostname;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemTotal_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize mem_total = avg(Val) by bin(TimeGenerated,15m), hostname\r\n| join (mem_free \r\n| join cachebuffer on TimeGenerated, hostname) on TimeGenerated, hostname\r\n| project TimeGenerated, hostname, mem_total, mem_free, cachebuffer\r\n| extend ram_used = (mem_total - mem_free) - cachebuffer; ",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Memory Used",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["ram_used"],
                          "group": "hostname",
                          "createOtherGroup": 5,
                          "seriesLabelSettings": [
                            {
                              "color": "green"
                            },
                            {
                              "color": "grayBlue"
                            }
                          ],
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemFree_bytes'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize free_mem = avg(Val) by bin(TimeGenerated,15m), hostname",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Memory Free",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["free_mem"],
                          "group": "hostname",
                          "createOtherGroup": null,
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let mem = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_Cached_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize mem_cache = avg(Val) by bin(TimeGenerated,15m), hostname;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_Buffers_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| summarize mem_buffer = avg(Val) by bin(TimeGenerated,15m), hostname\r\n| join mem on TimeGenerated, hostname\r\n| extend cachebuffer = mem_buffer + mem_cache\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Memory Cache & Buffer",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "TimeGenerated",
                          "yAxis": ["cachebuffer"],
                          "group": "hostname",
                          "createOtherGroup": 5,
                          "seriesLabelSettings": [
                            {
                              "color": "green"
                            },
                            {
                              "color": "grayBlue"
                            }
                          ],
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 0",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "NodeCPU"
          },
          "name": "group - 9"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": []
          },
          "name": "group - 11"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "SysLog Data",
            "items": [
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "8db83e45-0a3c-4f23-b71c-b6d065900cb6",
                            "version": "KqlParameterItem/1.0",
                            "name": "Facility",
                            "type": 2,
                            "isRequired": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "Syslog\r\n| distinct Facility",
                            "typeSettings": {
                              "additionalResourceOptions": ["value::all"],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "Timeframe",
                            "defaultValue": "value::all",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          {
                            "id": "2dea64e4-afb7-4212-b25f-708995920df6",
                            "version": "KqlParameterItem/1.0",
                            "name": "SeverityLevel",
                            "label": "Severity Level",
                            "type": 2,
                            "isRequired": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "Syslog\r\n| summarize by SeverityLevel",
                            "typeSettings": {
                              "additionalResourceOptions": ["value::all"],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 604800000
                            },
                            "timeContextFromParameter": "Timeframe",
                            "defaultValue": "value::all",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "value": ["value::all"]
                          },
                          {
                            "id": "6997f103-d582-4dd1-9e5d-c48bf32b6f21",
                            "version": "KqlParameterItem/1.0",
                            "name": "ProcessName",
                            "label": "Process",
                            "type": 2,
                            "isRequired": true,
                            "isGlobal": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "Syslog\r\n| summarize by ProcessName",
                            "value": ["value::all"],
                            "typeSettings": {
                              "additionalResourceOptions": ["value::all"],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 0
                            },
                            "timeContextFromParameter": "Timeframe",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      "name": "parameters - 5"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| summarize LogCount = count() by Computer\r\n| order by LogCount desc",
                        "size": 3,
                        "title": "Log count by Host",
                        "timeContextFromParameter": "Timeframe",
                        "exportFieldName": "Computrer",
                        "exportParameterName": "Computer",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "piechart"
                      },
                      "customWidth": "25",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| summarize LogCount = count() by SeverityLevel\r\n| order by LogCount desc",
                        "size": 3,
                        "title": "Log count distribution by Severity",
                        "timeContextFromParameter": "Timeframe",
                        "exportedParameters": [
                          {
                            "fieldName": "Computer",
                            "parameterName": "Computer"
                          },
                          {
                            "fieldName": "SeverityLevel",
                            "parameterName": "SeverityLevel",
                            "parameterType": 1
                          }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "piechart",
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "warn",
                              "color": "yellow"
                            },
                            {
                              "seriesName": "err",
                              "color": "orange"
                            },
                            {
                              "seriesName": "crit",
                              "color": "redBright"
                            },
                            {
                              "seriesName": "alert",
                              "color": "blue"
                            }
                          ]
                        }
                      },
                      "customWidth": "25",
                      "name": "query - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Syslog \r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| summarize LogCount = count() by Computer, Facility, SeverityLevel, ProcessName\r\n| order by LogCount desc",
                        "size": 0,
                        "title": "Syslog aggregated over various dimensions",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "table",
                        "sortBy": [],
                        "graphSettings": {
                          "type": 0,
                          "topContent": {
                            "columnMatch": "Computer",
                            "formatter": 1
                          },
                          "centerContent": {
                            "columnMatch": "LogCount",
                            "formatter": 1,
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 2",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 1,
                            "content": {
                              "json": "💡 _Click on a row to see more details about the host and the severity information for the same._ "
                            },
                            "conditionalVisibility": {
                              "parameterName": "HasHeartbeat",
                              "comparison": "isNotEqualTo",
                              "value": "0"
                            },
                            "name": "text - 7"
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Syslog \r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| summarize LogCount = count() by Computer, SeverityLevel\r\n//| extend Computer = strcat('🖥️ ', Computer)\r\n//| extend SeverityLevel = iff(SeverityLevel == \"warn\",strcat('⚠️ ', SeverityLevel),iff(SeverityLevel == \"err\",strcat('⛔ ', SeverityLevel),strcat('🔴 ', SeverityLevel)))\r\n| order by LogCount desc",
                              "size": 0,
                              "title": "Severity Count Per Host",
                              "timeContextFromParameter": "Timeframe",
                              "exportFieldName": "",
                              "exportParameterName": "Row",
                              "exportDefaultValue": "{}",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "table",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "SeverityLevel",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "LogCount",
                                    "formatter": 3,
                                    "formatOptions": {
                                      "palette": "blue",
                                      "compositeBarSettings": {
                                        "labelText": "",
                                        "columnSettings": []
                                      }
                                    }
                                  }
                                ],
                                "hierarchySettings": {
                                  "treeType": 1,
                                  "groupBy": ["SeverityLevel"],
                                  "expandTopLevel": true
                                },
                                "labelSettings": [
                                  {
                                    "columnId": "Computer",
                                    "label": "🖥️ Node"
                                  }
                                ]
                              },
                              "sortBy": []
                            },
                            "customWidth": "50",
                            "name": "query - 2",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let row = dynamic({Row});\r\nSyslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| where '{Row}' == '{}' or (Computer == row.Computer and SeverityLevel == row.SeverityLevel)\r\n| project TimeGenerated, Computer, SyslogMessage, _ResourceId\r\n| order by TimeGenerated",
                              "size": 0,
                              "title": "Syslog Messages for the Node & Severity selected",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            "customWidth": "50",
                            "name": "query - 8",
                            "styleSettings": {
                              "showBorder": true
                            }
                          }
                        ]
                      },
                      "name": "group - 10"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "title": "Log distribution over time by various Dimensions",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| make-series Request = count() default = 0 on TimeGenerated step 1h by RequestName = Facility",
                              "size": 0,
                              "title": "Syslog over time by Facility",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "timechart"
                            },
                            "customWidth": "49",
                            "name": "query - 1",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| make-series Request = count() default = 0 on TimeGenerated step 1h by RequestName = ProcessName",
                              "size": 0,
                              "title": "Syslog over time by Process",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "barchart"
                            },
                            "customWidth": "49",
                            "name": "query - 2",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| make-series Request = count() default = 0 on TimeGenerated step 1h by Computer",
                              "size": 0,
                              "title": "Syslog over time by HostName",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "timechart"
                            },
                            "customWidth": "49",
                            "name": "query - 0",
                            "styleSettings": {
                              "showBorder": true
                            }
                          },
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "Syslog\r\n| where Computer in ({Computer}) and SeverityLevel in ({SeverityLevel}) and ProcessName in ({ProcessName})\r\n| make-series Request = count() default = 0 on TimeGenerated step 1h by RequestName = SeverityLevel",
                              "size": 0,
                              "title": "Syslog over time by Severity",
                              "timeContextFromParameter": "Timeframe",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces",
                              "visualization": "barchart",
                              "chartSettings": {
                                "seriesLabelSettings": [
                                  {
                                    "seriesName": "warn",
                                    "color": "yellow"
                                  },
                                  {
                                    "seriesName": "err",
                                    "color": "orange"
                                  },
                                  {
                                    "seriesName": "alert",
                                    "color": "blue"
                                  },
                                  {
                                    "seriesName": "crit",
                                    "color": "redBright"
                                  }
                                ]
                              }
                            },
                            "customWidth": "49",
                            "name": "query - 3",
                            "styleSettings": {
                              "showBorder": true
                            }
                          }
                        ],
                        "exportParameters": true
                      },
                      "name": "group - 6",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 7"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Syslog"
          },
          "name": "group - 1",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let maxtime = \r\n    InsightsMetrics\r\n    | where Computer in ({Computer})\r\n    | where Namespace == 'prometheus' and Name == 'node_network_up'\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | extend device = tostring(Json.device)\r\n    | where hostname in ({Computer})\r\n    | summarize TimeGenerated = max(TimeGenerated) by hostname, device\r\n    | order by TimeGenerated desc;\r\nlet status = \r\n    InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_network_up'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | extend device = tostring(Json.device)\r\n    | summarize status=avg(Val) by TimeGenerated, hostname, device\r\n    | join maxtime on hostname, device, TimeGenerated\r\n    | project-away hostname1, device1, TimeGenerated1;\r\nlet join1 = \r\n    InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_network_receive_packets_total'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend hostname = tostring(Tags.hostName), device = Tags.device\r\n    | where hostname in ({Computer})\r\n    | extend NodeDisk = strcat(device, \"/\", hostname)\r\n    | order by NodeDisk asc, TimeGenerated asc\r\n    | serialize\r\n    | extend\r\n        PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)),\r\n        PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n    | where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n    | extend Value = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n    | project TimeGenerated, NodeDisk, Value, hostname, device\r\n    | summarize RX_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n    | order by RX_packets desc\r\n    | join status on TimeGenerated, device, hostname\r\n    | project-away device1, hostname1, TimeGenerated1;\r\nlet join2 = \r\n    InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_network_transmit_packets_total'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend hostname = tostring(Tags.hostName), device = Tags.device\r\n    | where hostname in ({Computer})\r\n    | extend NodeDisk = strcat(device, \"/\", hostname)\r\n    | order by NodeDisk asc, TimeGenerated asc\r\n    | serialize\r\n    | extend\r\n        PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)),\r\n        PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n    | where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n    | extend Value = iif(PrevVal > Val, Val , iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n    | project TimeGenerated, NodeDisk, Value, hostname, device\r\n    | summarize TX_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n    | order by TX_packets desc\r\n    | join join1 on TimeGenerated, device, hostname\r\n    | project-away device1, hostname1, TimeGenerated1;\r\nlet join3 = \r\n    InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_network_receive_errs_total'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend hostname = tostring(Tags.hostName), device = Tags.device\r\n    | where hostname in ({Computer})\r\n    | extend NodeDisk = strcat(device, \"/\", hostname)\r\n    | order by NodeDisk asc, TimeGenerated asc\r\n    | serialize\r\n    | extend\r\n        PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)),\r\n        PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n    | where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n    | extend Value = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n    | project TimeGenerated, NodeDisk, Value, hostname, device\r\n    | summarize RX_err_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n    | join join2 on TimeGenerated, device, hostname\r\n    | project-away device1, hostname1, TimeGenerated1;\r\n//let join4 = \r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_errs_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend\r\n    PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)),\r\n    PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Value = iif(PrevVal > Val, Val , iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Value, hostname, device\r\n| summarize TX_err_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n| join join3 on TimeGenerated, device, hostname\r\n| project-away device1, hostname1, TimeGenerated1\r\n| join (InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_network_mtu_bytes'\r\n    | extend Tags = todynamic(Tags)\r\n    | extend hostname = tostring(Tags.hostName), device = Tags.device\r\n    | where hostname in ({Computer})\r\n    | extend NodeDisk = strcat(device, \"/\", hostname)\r\n    | order by NodeDisk asc, TimeGenerated asc\r\n    | summarize MTU_bytes = avg(Val) by TimeGenerated, hostname, tostring(device)\r\n    )\r\n    on TimeGenerated, device, hostname\r\n| join kind=leftouter (InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_hwmon_temp_celsius'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | summarize temp=avg(Val) by TimeGenerated, hostname\r\n    )\r\n    on hostname, TimeGenerated\r\n| project-away TimeGenerated1, TimeGenerated2, device1\r\n| extend temp=round(temp,2)\r\n| extend status=iff(status==1, \"Up\", \"Down\") \r\n| extend  hostname = strcat('🖥️ ',  hostname)\r\n| project-away hostname1, hostname2",
                  "size": 0,
                  "title": "Network Packets Transferred (with last reported timestamp)",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Group",
                        "formatter": 1
                      },
                      {
                        "columnMatch": "status",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Up",
                              "representation": "up",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Down",
                              "representation": "down",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["hostname"],
                      "expandTopLevel": true
                    }
                  },
                  "sortBy": []
                },
                "customWidth": "70",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let maxtime = \r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_up'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| where hostname in ({Computer})\r\n| summarize TimeGenerated = max(TimeGenerated) by hostname, device\r\n| order by TimeGenerated desc;\r\nlet status = \r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_up'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| extend device = tostring(Json.device)\r\n| summarize status=avg(Val) by TimeGenerated, hostname, device\r\n| join maxtime on hostname, device, TimeGenerated\r\n| project-away hostname1, device1, TimeGenerated1;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_receive_packets_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Value = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Value, hostname, device\r\n| summarize RX_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n| join status on TimeGenerated, device, hostname\r\n| project-away device1, hostname1, TimeGenerated1\r\n| summarize avg(RX_packets) by hostname\r\n| order by avg_RX_packets desc",
                  "size": 0,
                  "title": "Network Packets Received per node",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "tiles",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "max_RX_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "avg_RX_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "rcv_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Rate",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "temp",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "transmit_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "status",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Up",
                              "representation": "Available",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Down",
                              "representation": "Unavailable",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      }
                    ]
                  },
                  "sortBy": [],
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "hostname",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "avg_RX_packets",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "greenRed"
                      },
                      "numberFormat": {
                        "unit": 2,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false,
                    "size": "full"
                  }
                },
                "customWidth": "15",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let maxtime = \r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_up'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| extend device = tostring(Json.device)\r\n| where hostname in ({Computer})\r\n| summarize TimeGenerated = max(TimeGenerated) by hostname, device\r\n| order by TimeGenerated desc;\r\nlet status = \r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_up'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| where hostname in ({Computer})\r\n| extend device = tostring(Json.device)\r\n| summarize status=avg(Val) by TimeGenerated, hostname, device\r\n| join maxtime on hostname, device, TimeGenerated\r\n| project-away hostname1, device1, TimeGenerated1;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_packets_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Value = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Value, hostname, device\r\n| summarize RX_packets = avg(Value) by TimeGenerated, tostring(hostname), tostring(device)\r\n| join status on TimeGenerated, device, hostname\r\n| project-away device1, hostname1, TimeGenerated1\r\n| summarize avg(RX_packets) by hostname\r\n| order by avg_RX_packets desc",
                  "size": 0,
                  "title": "Network Packets Transferred per node",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "visualization": "tiles",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "hostname",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "temp",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "transmit_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "rcv_bytes",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "status",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Up",
                              "representation": "Available",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Down",
                              "representation": "Unavailable",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "Unknown",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["hostname"],
                      "expandTopLevel": false
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_count_$gen_group_0",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "sortBy": [
                    {
                      "itemKey": "$gen_count_$gen_group_0",
                      "sortOrder": 1
                    }
                  ],
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "hostname",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "avg_RX_packets",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "greenRed"
                      },
                      "numberFormat": {
                        "unit": 2,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false,
                    "size": "full"
                  }
                },
                "customWidth": "15",
                "name": "query - 0 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_receive_packets_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Value = iif(PrevVal > Val, Val , iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Value, hostname, device\r\n| summarize rcv_bytes = avg(Value) by bin(TimeGenerated,10m), tostring(hostname), tostring(device)",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Packets received per node over time",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_packets_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Value = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Value, hostname, device\r\n| summarize rcv_bytes = avg(Value) by bin(TimeGenerated,10m), tostring(hostname), tostring(device)",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Packets transmitted per node over time",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 2,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 0"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_receive_errs_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize rcv_bytes = max(Rate) by bin(TimeGenerated,10m), tostring(hostname), tostring(device)",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Errored Packets received per node over time",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart"
                      },
                      "customWidth": "50",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_network_transmit_errs_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend hostname = tostring(Tags.hostName), device = Tags.device\r\n| where hostname in ({Computer})\r\n| extend NodeDisk = strcat(device, \"/\", hostname)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val , iif(PrevVal == Val, 0.0, (Val - PrevVal)))\r\n| project TimeGenerated, NodeDisk, Rate, hostname, device\r\n| summarize rcv_bytes = avg(Rate) by bin(TimeGenerated,10m), tostring(hostname), tostring(device)",
                        "size": 0,
                        "aggregation": 3,
                        "title": "Errored Packets transmitted per node over time",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart"
                      },
                      "customWidth": "50",
                      "name": "query - 1 - Copy",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 0 - Copy"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_memory_numa_HugePages_Total'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | summarize hugepages_numa_total=avg(Val) by hostname\r\n| join (InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_memory_numa_HugePages_Free'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | summarize hugepages_numa_free=avg(Val) by hostname)\r\n    on hostname",
                  "size": 0,
                  "title": "HugePages Details",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "hostname1",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "hostname2",
                        "formatter": 5
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_memory_numa_HugePages_Total'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | summarize hugepages_numa_total=avg(Val) by TimeGenerated, hostname\r\n| join (InsightsMetrics\r\n    | where Namespace == 'prometheus' and Name == 'node_memory_numa_HugePages_Free'\r\n    | project TimeGenerated, Computer, Val, Tags\r\n    | extend Json = parse_json(Tags)\r\n    | extend hostname = tostring(Json.hostName)\r\n    | where hostname in ({Computer})\r\n    | summarize hugepages_numa_free=avg(Val) by TimeGenerated, hostname)\r\n    on TimeGenerated, hostname",
                  "size": 0,
                  "aggregation": 2,
                  "title": "HugePages Details",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "hostname1",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "hostname2",
                        "formatter": 5
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Network"
          },
          "name": "group - 13"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let servercnt =\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize dcount(tostring(HostName));\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu\r\n| summarize cores_per_server = dcount(tostring(Cpu))\r\n| extend cpu_capacity = cores_per_server * toscalar(servercnt)\r\n",
                        "size": 3,
                        "title": "CPU Capacity",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "cpu_capacity",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 0,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16",
                      "name": "query - 7 - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n//| where isnotnull(Rate)\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate))",
                        "size": 3,
                        "title": "CPU Usage",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "CpuUsage",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16.7",
                      "name": "query - 7"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let servercnt =\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize dcount(tostring(HostName));\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| summarize disk_per_server=avg(Val)\r\n| extend Disk_capacity = disk_per_server * toscalar(servercnt)",
                        "size": 3,
                        "title": "Disk Capacity",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "Disk_capacity",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16.7",
                      "name": "query - 7 - Copy - Copy - Copy - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let diskfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_avail_bytes'\r\n| summarize diskfree=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_filesystem_size_bytes'\r\n| summarize disktotal=avg(Val)\r\n| extend usedmem = 100 - (100 * (toscalar(diskfree) / disktotal ))",
                        "size": 3,
                        "title": "Disk Usage",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "usedmem",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16.7",
                      "name": "query - 7 - Copy - Copy - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let servercnt =\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName)\r\n| summarize dcount(tostring(HostName));\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemTotal_bytes'\r\n| summarize mem_per_server = avg(Val)\r\n| extend Memory_capacity = mem_per_server * toscalar(servercnt)",
                        "size": 3,
                        "title": "Memory Capacity",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "Memory_capacity",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 2,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16.7",
                      "name": "query - 7 - Copy"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let memfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemFree_bytes'\r\n| summarize memfree=avg(Val);\r\nlet memcache = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Cached_bytes'\r\n| summarize memcache=avg(Val);\r\nlet membuffer = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_Buffers_bytes'\r\n| summarize membuffer=avg(Val);\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name contains 'node_memory_MemTotal_bytes'\r\n| summarize memtotal=avg(Val)\r\n| extend usedmem = 100 * (1-((toscalar(memfree) + toscalar(memcache) + toscalar(membuffer))/memtotal))",
                        "size": 3,
                        "title": "Memory Usage",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "tiles",
                        "tileSettings": {
                          "titleContent": {},
                          "leftContent": {
                            "columnMatch": "usedmem",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 1,
                              "options": {
                                "style": "decimal"
                              }
                            }
                          },
                          "showBorder": false,
                          "size": "auto"
                        }
                      },
                      "customWidth": "16.7",
                      "name": "query - 7 - Copy - Copy"
                    }
                  ]
                },
                "name": "Overview tiles",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_time_seconds\"\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize TT=avg(Val) by hostname\r\n| join kind=leftouter (\r\nInsightsMetrics\r\n| where Namespace == \"prometheus\" and Name contains \"node_boot_time_seconds\"\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize BT=avg(Val) by hostname\r\n) on hostname\r\n| extend Uptime = TT - BT\r\n| join kind=leftouter (InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_hwmon_temp_celsius'\r\n| project TimeGenerated, Computer, Val, Tags\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Temperature = strcat(round(avg(Val),2), \" C\") by hostname\r\n) on hostname\r\n| project-away hostname2",
                  "size": 3,
                  "title": "Uptime and Temperature per Node",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "hostname",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        }
                      },
                      {
                        "columnMatch": "Temperature",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        }
                      },
                      {
                        "columnMatch": "BT",
                        "formatter": 5,
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "hostname1",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "TT",
                        "formatter": 5,
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Uptime",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      }
                    ]
                  }
                },
                "customWidth": "20",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let diskfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_filesystem_avail_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Disk_Free=avg(Val) by hostname;\r\nlet disk_capacity = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_filesystem_size_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Disk_Total = avg(Val) by hostname\r\n| join diskfree on hostname\r\n| extend Disk_Used = (Disk_Total - Disk_Free );\r\nlet memfree = InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemFree_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Mem_Free=avg(Val) by hostname;\r\nInsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'node_memory_MemTotal_bytes'\r\n| extend Json = parse_json(Tags)\r\n| extend hostname = tostring(Json.hostName)\r\n| summarize Mem_Total=avg(Val) by hostname\r\n| join memfree on hostname\r\n| extend Mem_Used =  (Mem_Total-Mem_Free)\r\n| join disk_capacity on hostname\r\n| project-away hostname1, hostname2, hostname11\r\n| extend Disk_Allocation = strcat(round((Disk_Used/Disk_Total)*100,2), \" %\"), Memory_Allocation = strcat(round((Mem_Used/Mem_Total)*100,2), \" %\")\r\n| extend hostname = strcat('🖥️ ', hostname)\r\n| project-reorder hostname, Disk_Total, Disk_Used, Disk_Free, Disk_Allocation, Mem_Total, Mem_Used, Mem_Free, Memory_Allocation",
                  "size": 3,
                  "title": "Memory & Disk Capacity & Usage",
                  "timeContextFromParameter": "Timeframe",
                  "showExportToExcel": true,
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "hostname",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Disk_Total",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Disk_Used",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Disk_Free",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Disk_Allocation",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "[[\"Disk_Allocation\"]",
                            "columnSettings": [
                              {
                                "columnName": "Disk_Used",
                                "color": "blue"
                              },
                              {
                                "columnName": "Disk_Free",
                                "color": "green"
                              }
                            ]
                          },
                          "customColumnWidthSetting": "30ch"
                        }
                      },
                      {
                        "columnMatch": "Mem_Total",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Mem_Used",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Mem_Free",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Mem_Cache",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Mem_Buffer",
                        "formatter": 0,
                        "formatOptions": {
                          "customColumnWidthSetting": "15ch"
                        },
                        "numberFormat": {
                          "unit": 2,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Memory_Allocation",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "[[\"Memory_Allocation\"]",
                            "columnSettings": [
                              {
                                "columnName": "Mem_Used",
                                "color": "blue"
                              },
                              {
                                "columnName": "Mem_Free",
                                "color": "green"
                              },
                              {
                                "columnName": "Mem_Cache",
                                "color": "grayBlue"
                              },
                              {
                                "columnName": "Mem_Buffer",
                                "color": "greenDark"
                              }
                            ]
                          },
                          "customColumnWidthSetting": "25ch"
                        }
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["hostname"],
                      "expandTopLevel": true
                    }
                  }
                },
                "customWidth": "80",
                "name": "query - 2",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate)) by bin(TimeGenerated, 1d), HostName\r\n| summarize Timestamp=make_list(TimeGenerated), CpuUsage=make_list(CpuUsage) by HostName\r\n| extend series_decompose_anomalies(CpuUsage)\r\n| mv-expand Timestamp, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score, series_decompose_anomalies_CpuUsage_baseline\r\n| project-away series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score\r\n| project-rename ExpectedCpuUsage=series_decompose_anomalies_CpuUsage_baseline\r\n| extend Gap = todecimal(CpuUsage)-todecimal(ExpectedCpuUsage)\r\n| where Gap != 0\r\n| extend Trend=iff(Gap>0, \"Up\", \"Down\")\r\n| extend ActualVsExpectedAsPercent = round(todecimal(CpuUsage)*100/todecimal(ExpectedCpuUsage), 3)\r\n| sort by todatetime(Timestamp) asc\r\n| extend Avg_CPU_Usage = round(todecimal(CpuUsage),3), Expected_Avg_CPU_Usage = round(todecimal(ExpectedCpuUsage),3)\r\n| extend  HostName = strcat('🖥️ ',  HostName)\r\n| project HostName, Timestamp=format_datetime(todatetime(Timestamp), 'yyyy-MM-dd'), Trend, Avg_CPU_Usage, Expected_Avg_CPU_Usage, ActualVsExpectedAsPercent",
                        "size": 0,
                        "title": "Daily CPU Usage Trend Analysis(past 7 days)",
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "HostName",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Trend",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Up",
                                    "representation": "trendup",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Down",
                                    "representation": "trenddown",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            {
                              "columnMatch": "Avg_CPU_Usage",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "Expected_Avg_CPU_Usage",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "ActualVsExpectedAsPercent",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            }
                          ],
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": ["HostName"],
                            "expandTopLevel": true
                          }
                        }
                      },
                      "customWidth": "40",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name contains 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate)) by bin(TimeGenerated, 30m), HostName\r\n| order by TimeGenerated asc\r\n| summarize Timestamp=make_list(TimeGenerated), CpuUsage=make_list(CpuUsage) by HostName\r\n| extend series_decompose_anomalies(CpuUsage, 1.5, -1, 'linefit')\r\n| mv-expand Timestamp, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score, series_decompose_anomalies_CpuUsage_baseline\r\n| project-away series_decompose_anomalies_CpuUsage_ad_score\r\n| project-rename ExpectedCpuUsage=series_decompose_anomalies_CpuUsage_baseline\r\n| project-rename anomalies=series_decompose_anomalies_CpuUsage_ad_flag\r\n| project Timestamp, toint(CpuUsage), toint(ExpectedCpuUsage), toint(anomalies)\r\n| render anomalychart with(anomalycolumns=anomalies)",
                        "size": 0,
                        "aggregation": 2,
                        "title": "CPU Usage Actual vs Expected behavior (Past 7 days)",
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "xAxis": "Timestamp"
                        }
                      },
                      "customWidth": "60",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate)) by bin(TimeGenerated, 30m), HostName\r\n| order by TimeGenerated asc\r\n| summarize Timestamp=make_list(TimeGenerated), CpuUsage=make_list(CpuUsage) by HostName\r\n| extend series_decompose_anomalies(CpuUsage, 1.5, -1, 'linefit')\r\n| mv-expand Timestamp, CpuUsage, series_decompose_anomalies_CpuUsage_ad_flag, series_decompose_anomalies_CpuUsage_ad_score, series_decompose_anomalies_CpuUsage_baseline\r\n| where series_decompose_anomalies_CpuUsage_ad_flag == 1\r\n| project todatetime(Timestamp), HostName, Actual_CPU_Usage = round(todecimal(CpuUsage),3), Outlier_CPU_Usage = round(todecimal(series_decompose_anomalies_CpuUsage_baseline),3)\r\n| extend  HostName = strcat('🖥️ ',  HostName)\r\n| order by Timestamp desc",
                        "size": 0,
                        "title": "Anomaly (Outlier) detected over 30 min aggregation",
                        "timeContext": {
                          "durationMs": 172800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "HostName",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Actual_CPU_Usage",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            },
                            {
                              "columnMatch": "Outlier_CPU_Usage",
                              "formatter": 0,
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal"
                                }
                              }
                            }
                          ],
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": ["HostName"],
                            "expandTopLevel": true
                          }
                        }
                      },
                      "customWidth": "40",
                      "name": "query - 2",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let dt = 30m;\r\nlet horizon=3d;\r\nInsightsMetrics\r\n//| where Computer in ({Computer})\r\n| where Namespace == 'prometheus' and Name == 'node_cpu_seconds_total'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Cpu = Tags.cpu, Mode = Tags.mode\r\n| where Mode == \"idle\"\r\n| extend NodeDisk = strcat(Mode, \"/\", Cpu, \"/\", HostName)\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) //and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1)))\r\n| project TimeGenerated, NodeDisk, Rate, HostName\r\n| summarize CpuUsage = 100 - (100 * avg(Rate)) by bin(TimeGenerated, 30m), HostName\r\n| order by TimeGenerated asc\r\n| make-series CpuUsage=avg(CpuUsage) on TimeGenerated from {Timeframe:start} to now()+horizon step dt by 30m\r\n| extend Predicted_CpuUSage = series_decompose_forecast(CpuUsage, toint(horizon/dt))\r\n| render timechart",
                        "size": 0,
                        "aggregation": 3,
                        "title": " CPU Usage (Forecasting based on last 7 days data)",
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart"
                      },
                      "customWidth": "60",
                      "name": "query - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "name": "group - 2"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Capacity"
          },
          "name": "group - 14"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": ["[parameters('workbookSourceId')]"],
      "fromTemplateId": "community-Workbooks/LogAnalytics Workspace/Overview"
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}
