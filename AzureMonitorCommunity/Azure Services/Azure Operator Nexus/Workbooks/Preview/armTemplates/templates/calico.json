{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Calico",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workspaceLAW": {
      "type": "string",
      "defaultValue": "afoinc-nft-law",
      "metadata": {
        "description": "The friendly name for the workspace that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "connectedCluster": {
      "type": "string",
      "defaultValue": "nft-target-cluster",
      "metadata": {
        "description": "The friendly name for the connected cluster.  This name must be unique within a resource group."
      }
    },
    "workbookSourceId": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().id, '/providers/microsoft.operationalinsights/workspaces/', parameters('workspaceLAW'))]",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    },
    "workbookConnectedCluster": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().id, '/providers/Microsoft.Kubernetes/connectedClusters/', parameters('connectedCluster'))]",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure region with which the workbook will be associated"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 1,
          "content": {
            "json": "# Calico Metrics "
          },
          "name": "text - 0"
        },
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "crossComponentResources": ["{Resource}"],
            "parameters": [
              {
                "id": "4fe99ad9-28c9-4ee8-9343-dd8b104a8131",
                "version": "KqlParameterItem/1.0",
                "name": "Timeframe",
                "label": "",
                "type": 4,
                "isRequired": true,
                "typeSettings": {
                  "selectableValues": [
                    {
                      "durationMs": 300000
                    },
                    {
                      "durationMs": 900000
                    },
                    {
                      "durationMs": 1800000
                    },
                    {
                      "durationMs": 3600000
                    },
                    {
                      "durationMs": 14400000
                    },
                    {
                      "durationMs": 43200000
                    },
                    {
                      "durationMs": 86400000
                    },
                    {
                      "durationMs": 172800000
                    },
                    {
                      "durationMs": 259200000
                    },
                    {
                      "durationMs": 604800000
                    },
                    {
                      "durationMs": 1209600000
                    },
                    {
                      "durationMs": 2419200000
                    },
                    {
                      "durationMs": 2592000000
                    },
                    {
                      "durationMs": 5184000000
                    },
                    {
                      "durationMs": 7776000000
                    }
                  ]
                },
                "timeContext": {
                  "durationMs": 86400000
                },
                "value": {
                  "durationMs": 259200000
                }
              },
              {
                "id": "540878b6-60a4-4894-ac38-3e490978c77c",
                "version": "KqlParameterItem/1.0",
                "name": "Resource",
                "label": "Workspace",
                "type": 5,
                "description": "Workspace",
                "isRequired": true,
                "query": "InsightsMetrics \r\n| where Namespace == \"prometheus\" and Name has \"calico\"\r\n| distinct _ResourceId",
                "value": null,
                "typeSettings": {
                  "resourceTypeFilter": {
                    "microsoft.kubernetes/connectedclusters": true
                  },
                  "additionalResourceOptions": ["value::1"],
                  "showDefault": false
                },
                "timeContext": {
                  "durationMs": 0
                },
                "timeContextFromParameter": "Timeframe",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              {
                "id": "f71f389e-fbfd-48de-a066-acad0c830c5e",
                "version": "KqlParameterItem/1.0",
                "name": "Computer",
                "label": "Hostname",
                "type": 2,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "query": "KubeNodeInventory \r\n| distinct Computer",
                "crossComponentResources": ["{Resource}"],
                "value": ["value::all"],
                "typeSettings": {
                  "additionalResourceOptions": ["value::all"],
                  "showDefault": false
                },
                "timeContext": {
                  "durationMs": 0
                },
                "timeContextFromParameter": "Timeframe",
                "queryType": 0,
                "resourceType": "microsoft.kubernetes/connectedclusters"
              }
            ],
            "style": "above",
            "queryType": 0,
            "resourceType": "microsoft.kubernetes/connectedclusters"
          },
          "name": "parameters - 6"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "tabStyle": "bigger",
            "links": [
              {
                "id": "f491cc1f-0b7a-4066-9936-debfb2269c54",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Overview",
                "subTarget": "Log",
                "style": "link"
              },
              {
                "id": "ce0a6d07-06a3-4044-84c5-5c450f776f02",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Felix",
                "subTarget": "Felix",
                "preText": "Felix",
                "style": "link"
              },
              {
                "id": "697824e2-14fc-4c6d-b2fb-abcd8b44eefa",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "Typha",
                "subTarget": "Typha",
                "style": "link"
              },
              {
                "id": "217a1de4-8ea9-4b58-9559-007310b22707",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "IP Tables",
                "subTarget": "IPTables",
                "style": "link"
              },
              {
                "id": "75c7943d-446e-4e76-a978-0fd7392bb5a8",
                "cellValue": "setTab",
                "linkTarget": "parameter",
                "linkLabel": "IP Set",
                "subTarget": "IPSets",
                "style": "link"
              }
            ]
          },
          "name": "links - 1"
        },
        {
          "type": 1,
          "content": {
            "json": "## Typha is an optional set of pods that extends Felix to scale traffic between Calico nodes and the datastore."
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Typha"
          },
          "name": "text - 10"
        },
        {
          "type": 1,
          "content": {
            "json": "## Felix is a daemon that runs on every machine that implements network policy. Felix is the brains of Calico."
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Felix"
          },
          "name": "text - 9"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'typha_connections_dropped'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                        "size": 1,
                        "aggregation": 5,
                        "title": "Connections Dropped",
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart",
                        "chartSettings": {
                          "ySettings": {
                            "min": -1
                          }
                        }
                      },
                      "name": "query - 2"
                    }
                  ]
                },
                "name": "group - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'typha_ping_latency_count'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Ping Latency Count",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "name": "query - 2 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ],
            "exportParameters": true
          },
          "customWidth": "100",
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Typha"
          },
          "name": "group - 4",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_cluster_num_host_endpoints'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Cluster Number of Host Endpoints",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1,
                      "max": 1
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "title": "Number of Cluster Workload Endpoints",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_cluster_num_workload_endpoints'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                        "size": 1,
                        "aggregation": 5,
                        "timeContextFromParameter": "Timeframe",
                        "queryType": 0,
                        "resourceType": "microsoft.kubernetes/connectedclusters",
                        "crossComponentResources": ["{Resource}"],
                        "visualization": "timechart"
                      },
                      "name": "query - 4"
                    }
                  ],
                  "exportParameters": true
                },
                "customWidth": "50",
                "conditionalVisibility": {
                  "parameterName": "setTab",
                  "comparison": "isEqualTo",
                  "value": "Felix"
                },
                "name": "group - 3 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_cluster_num_hosts'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Cluster Number Of Hosts",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "conditionalVisibility": {
                  "parameterName": "setTab",
                  "comparison": "isEqualTo",
                  "value": "Felix"
                },
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_ipsets_calico'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Active IP Sets",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "name": "query - 3",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Name contains \"felix_int_dataplane_apply_time_seconds\"\r\n| where Computer in ({Computer})\r\n| sort by Tags, Name, Val,TimeGenerated asc \r\n| extend calicojson = parse_json(Tags)\r\n| where calicojson.quantile == 0.5\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Data Plane Apply Time Quantile 0.5",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Name contains \"felix_int_dataplane_apply_time_seconds\"\r\n| where Computer in ({Computer})\r\n| sort by Tags, Name, Val,TimeGenerated asc \r\n| extend calicojson = parse_json(Tags)\r\n| where calicojson.quantile == 0.9\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Data Plane Apply Time Quantile 0.9",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "name": "query - 4 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Name contains \"felix_int_dataplane_apply_time_seconds\"\r\n| where Computer in ({Computer})\r\n| sort by Tags, Name, Val,TimeGenerated asc \r\n| extend calicojson = parse_json(Tags)\r\n| where calicojson.quantile == 0.99\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 1,
                  "aggregation": 5,
                  "title": "Data Plane Apply Time Quantile 0.99",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "name": "query - 4 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ],
            "exportParameters": true
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Felix"
          },
          "name": "group - 3",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_iptables_save_errors'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Tables Save Errors",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 4",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_int_dataplane_failures'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Tables Restore Errors",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 4 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_iptables_restore_errors'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Tables Restore Errors",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 4 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_resyncs_started'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Tables Save Errors",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 4 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "IPTables"
          },
          "name": "group - 8",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_iptables_chains'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Tables Chains",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "name": "query - 5",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where Namespace == 'prometheus' and Name == 'felix_ipset_errors'\r\n| where Computer in ({Computer})\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer\r\n",
                  "size": 0,
                  "aggregation": 5,
                  "title": "IP Set Errors",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart",
                  "chartSettings": {
                    "ySettings": {
                      "min": -1
                    }
                  }
                },
                "name": "query - 5 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "IPSets"
          },
          "name": "group - 7",
          "styleSettings": {
            "showBorder": true
          }
        },
        {
          "type": 1,
          "content": {
            "json": "## Pod Status\r\n\r\nSelect a row in below table to display related logs in the KubeEvents Table."
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "overview"
          },
          "name": "text - 11"
        },
        {
          "type": 1,
          "content": {
            "json": "## KubeEvents"
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "overview"
          },
          "name": "text - 12"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "parameters": [
                    {
                      "id": "1d9aca7f-8515-44d2-8416-7892105135c0",
                      "version": "KqlParameterItem/1.0",
                      "name": "Application",
                      "type": 2,
                      "value": "calico",
                      "isHiddenWhenLocked": true,
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "jsonData": "[[\"kubevirt\", \"coredns\", \"pure\", \"virt\", \"calico\"]",
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    }
                  ],
                  "style": "pills",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters - 10"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Name, Namespace\r\n| summarize dcount(Name) by Computer",
                  "size": 3,
                  "aggregation": 3,
                  "title": "Count of Pod running in each Node",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "dcount_Name",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false
                  }
                },
                "customWidth": "50",
                "name": "query - 0",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Name, Namespace, ContainerID\r\n| summarize dcount(ContainerID) by Computer",
                  "size": 3,
                  "aggregation": 3,
                  "title": "Count of Container running in each Node",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "dcount_ContainerID",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": false
                  }
                },
                "customWidth": "50",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Namespace, Name, _ResourceId, PodStatus\r\n| summarize count() by PodStatus",
                  "size": 3,
                  "aggregation": 3,
                  "title": "Pod Status",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "piechart"
                },
                "customWidth": "20",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Namespace, Name, _ResourceId, PodStatus",
                  "size": 0,
                  "aggregation": 3,
                  "title": "Pod Status",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "_ResourceId",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "PodStatus",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Running",
                              "representation": "Available",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Terminating",
                              "representation": "disabled",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Pending",
                              "representation": "pending",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "more",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "customWidth": "40",
                "name": "query - 0 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| project TimeGenerated, Computer, Namespace, Name, PodUid, PodCreationTimeStamp, PodRestartCount, PodStartTime, PodStatus, PodIp, ServiceName, ControllerKind, ControllerName\r\n| summarize sum(PodRestartCount) by bin(TimeGenerated,30m), Name",
                  "size": 0,
                  "aggregation": 3,
                  "title": "Pod Restarts over Time",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "40",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Namespace, Name, _ResourceId, ContainerStatus, ContainerID\r\n| summarize count() by ContainerStatus",
                  "size": 3,
                  "aggregation": 3,
                  "title": "Container Status",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "piechart"
                },
                "customWidth": "20",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Namespace, Name, _ResourceId, ContainerStatus, ContainerID",
                  "size": 0,
                  "aggregation": 3,
                  "title": "Container Status",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "_ResourceId",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ContainerStatus",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "running",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "text": "{0}{1}"
                            },
                            {
                              "thresholdValue": "waiting",
                              "representation": "pending",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "more",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "customWidth": "40",
                "name": "query - 0 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| project TimeGenerated, Computer, Namespace, Name, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, ControllerKind, ControllerName\r\n| summarize sum(ContainerRestartCount) by bin(TimeGenerated,30m), ContainerName",
                  "size": 0,
                  "aggregation": 3,
                  "title": "Container details",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "timechart"
                },
                "customWidth": "40",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 1,
                "content": {
                  "json": "## 💡 _Click on a Pod to see more details about the Container's listed, logs, events and more information._ "
                },
                "name": "text - 14"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "KubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| distinct Computer, Name, Namespace, ContainerName\r\n| extend PodName = Name\r\n| project-away Name\r\n| project-reorder Computer, PodName, Namespace, ContainerName",
                  "size": 0,
                  "title": "List Node, Pod, Containers",
                  "timeContextFromParameter": "Timeframe",
                  "exportParameterName": "row",
                  "exportDefaultValue": "{}",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"]
                },
                "customWidth": "50",
                "name": "query - 15",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let row = dynamic({row});\r\nKubePodInventory\r\n| where Name has strcat(\"{Application}\", \"-\")\r\n| where Computer in ({Computer})\r\n| where '{row}' == '{}' or (Name == row.PodName)\r\n//| where TimeGenerated >= ago(startDateTime)\r\n//| where Namespace in('default', 'kube-system', 'nc-system') // and ControllerKind == 'ReplicaSet' // the system namespace filter goes here\r\n| distinct\r\n    ClusterName,\r\n    Computer,\r\n    PodUid,\r\n    TimeGenerated,\r\n    PodStatus,\r\n    ServiceName,\r\n    PodLabel,\r\n    Namespace,\r\n    ContainerStatus,\r\n    Name,\r\n    ControllerKind\r\n| summarize\r\n    arg_max(TimeGenerated, *),\r\n    TotalPODCount = count(),\r\n    podCount = sumif(1, PodStatus == 'Running' or PodStatus != 'Running'),\r\n    containerNotrunning = sumif(1, ContainerStatus != 'running')\r\n    by\r\n    ClusterName,\r\n    TimeGenerated,\r\n    ServiceName,\r\n    PodLabel,\r\n    Namespace,\r\n    Name,\r\n    ControllerKind\r\n| project\r\n    ClusterName,\r\n    ServiceName,\r\n    podCount,\r\n    containerNotrunning,\r\n    containerNotrunningPercent = (containerNotrunning * 100 / podCount),\r\n    TimeGenerated,\r\n    PodStatus,\r\n    PodLabel,\r\n    Namespace,\r\n    Environment = tostring(split(ClusterName, '-')[3]),\r\n    Location = tostring(split(ClusterName, '-')[4]),\r\n    ContainerStatus,\r\n    ControllerKind,\r\n    Name,\r\n    Computer\r\n//Uncomment the below line to set for automated alert\r\n| where PodStatus == \"Running\" //and containerNotrunningPercent > _minalertThreshold and containerNotrunningPercent < _maxalertThreshold\r\n| summarize arg_max(TimeGenerated, *), c_entry=count() by PodLabel, ServiceName, ClusterName, ControllerKind, Name, Computer\r\n//Below lines are to parse the labels to identify the impacted service/component name\r\n| extend parseLabel = replace(@'k8s-app', @'k8sapp', PodLabel)\r\n| extend parseLabel = replace(@'app.kubernetes.io/component', @'appkubernetesiocomponent', parseLabel)\r\n| extend parseLabel = replace(@'app.kubernetes.io/instance', @'appkubernetesioinstance', parseLabel)\r\n| extend tags = todynamic(parseLabel)\r\n| extend tag01 = todynamic(tags[0].app)\r\n| extend tag02 = todynamic(tags[0].k8sapp)\r\n| extend tag03 = todynamic(tags[0].appkubernetesiocomponent)\r\n| extend tag04 = todynamic(tags[0].aadpodidbinding)\r\n| extend tag05 = todynamic(tags[0].appkubernetesioinstance)\r\n| extend tag06 = todynamic(tags[0].component)\r\n| extend ContainerRunning = 100 - containerNotrunningPercent\r\n| project ClusterName, TimeGenerated, ControllerKind, Name, Computer,\r\n    ServiceName = strcat(ServiceName, tag01, tag02, tag03, tag04, tag05, tag06),\r\n    ContainerUnavailable = strcat(\"Unavailable Percentage: \", containerNotrunningPercent),\r\n    ContainerRunning,\r\n    containerNotrunningPercent,\r\n    PodStatus = PodStatus, \r\n    ContainerStatus = ContainerStatus",
                  "size": 0,
                  "title": "Pod/Container Availability",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "ClusterName",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "TimeGenerated",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "ContainerRunning",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": [
                              {
                                "columnName": "ContainerRunning",
                                "color": "blue"
                              },
                              {
                                "columnName": "containerNotrunningPercent",
                                "color": "red"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "columnMatch": "containerNotrunningPercent",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "PodStatus",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Running",
                              "representation": "success",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Terminating",
                              "representation": "disabled",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "more",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      {
                        "columnMatch": "containerrunningPercent",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": [
                              {
                                "columnName": "containerrunningPercent",
                                "color": "blue"
                              },
                              {
                                "columnName": "containerNotrunningPercent",
                                "color": "red"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 11",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let row = dynamic({row});\r\nKubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| where '{row}' == '{}' or (Name == row.PodName)\r\n| top-nested of PodUid by max(1), top-nested 1 of TimeGenerated by max(TimeGenerated), top-nested of Computer by max(1), top-nested of Namespace by max(1), top-nested of Name by max(1), top-nested of PodCreationTimeStamp by max(1), top-nested of PodRestartCount by max(1), top-nested of PodStartTime by max(1), top-nested of PodStatus by max(1), top-nested of PodIp by max(1), top-nested of ServiceName by max(1), top-nested of ControllerKind by max(1), top-nested of ControllerName by max(1)\r\n| extend  PodName = Name\r\n| project TimeGenerated, Computer, Namespace, PodName, PodUid, PodCreationTimeStamp, PodRestartCount, PodStartTime, PodStatus, PodIp, ServiceName, ControllerKind, ControllerName\r\n//| project TimeGenerated, Computer, Namespace, PodName, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, ControllerKind, ControllerName",
                  "size": 0,
                  "title": "Pod details",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Computer",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "Name",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["Computer"],
                      "expandTopLevel": true
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let row = dynamic({row});\r\nKubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| where '{row}' == '{}' or (Name == row.PodName)\r\n| top-nested of ContainerID by max(1), top-nested 1 of TimeGenerated by max(TimeGenerated), top-nested of Computer by max(1), top-nested of Namespace by max(1), top-nested of Name by max(1), top-nested of ContainerLastStatus by max(1), top-nested of ContainerName by max(1), top-nested of ContainerRestartCount by max(1), top-nested of ContainerStartTime by max(1), top-nested of ContainerStatus by max(1), top-nested of ContainerStatusReason by max(1), top-nested of ControllerKind by max(1), top-nested of ControllerName by max(1)\r\n| extend  PodName = Name\r\n| project TimeGenerated, Computer, Namespace, PodName, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, ControllerKind, ControllerName\r\n//| project TimeGenerated, Computer, Namespace, Name, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, ControllerKind, ControllerName",
                  "size": 0,
                  "title": "Container details",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Computer",
                        "formatter": 5
                      }
                    ],
                    "hierarchySettings": {
                      "treeType": 1,
                      "groupBy": ["Computer"],
                      "expandTopLevel": true
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 0 - Copy - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let row = dynamic({row});\r\nKubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| where '{row}' == '{}' or (Name == row.PodName)\r\n| project TimeGenerated, Computer, Namespace, Name, PodUid, PodCreationTimeStamp, PodRestartCount, PodStartTime, PodStatus, PodIp, ServiceName, ControllerKind, ControllerName, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, _ResourceId\r\n| join KubeEvents on Computer, Name, _ResourceId, TimeGenerated\r\n| project TimeGenerated, Computer, Name, Reason, Message, KubeEventType, SourceComponent\r\n| extend PodName = Name\r\n\r\n\r\n",
                  "size": 0,
                  "title": "KubeEvents for the Pods",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"],
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Name",
                        "formatter": 5
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 0 - Copy",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let row = dynamic({row});\r\nKubePodInventory\r\n| where Name has strcat(\"{Application}\",\"-\")\r\n| where Computer in ({Computer})\r\n| where '{row}' == '{}' or (Name == row.PodName)\r\n| project TimeGenerated, Computer, Namespace, Name, PodUid, PodCreationTimeStamp, PodRestartCount, PodStartTime, PodStatus, PodIp, ServiceName, ControllerKind, ControllerName, ContainerID, ContainerLastStatus, ContainerName, ContainerRestartCount, ContainerStartTime, ContainerStatus, ContainerStatusReason, _ResourceId\r\n| join ContainerLog on Computer, ContainerID, _ResourceId\r\n| project-away TimeGenerated\r\n| project TimeGenerated1, ContainerID, TimeOfCommand, Image, LogEntry, LogEntrySource\r\n| project-rename TimeGenerated = TimeGenerated1\r\n",
                  "size": 0,
                  "title": "Container Log",
                  "timeContextFromParameter": "Timeframe",
                  "queryType": 0,
                  "resourceType": "microsoft.kubernetes/connectedclusters",
                  "crossComponentResources": ["{Resource}"]
                },
                "customWidth": "50",
                "name": "query - 13",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "setTab",
            "comparison": "isEqualTo",
            "value": "Log"
          },
          "name": "group - 6"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": ["[parameters('workbookSourceId')]"],
      "fromTemplateId": "community-Workbooks/LogAnalytics Workspace/Overview"
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[parameters('workbookLocation')]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}
